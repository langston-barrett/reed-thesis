Type theory is simultaneously a programming language and an alternative to set theory as a foundation for mathematics. In this talk, we'll explore how one formal system can take on such seemingly disparate tasks. First, we'll try to understand the origins of formal systems, what they consist of, and how we can reason about them. We'll take a tour of intuitionistic propositional logic and the simply-typed Î»-calculus, discuss their similarity, and explore the consequences for mathematics and computer science.
